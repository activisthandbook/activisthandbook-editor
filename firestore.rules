rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /{document=**} {

    	function signedIn() {
        return request.auth.uid != null &&
          request.auth.token.email_verified == true
      }

      function getRoles() {
          return get(/databases/$(database)/documents/userProfiles/$(request.auth.uid)).data.roles;
        }

      function hasRole(userRoles, role) {
        return signedIn() && (role in userRoles);
      }

      // function isModerator() {
      //   return
      //     request.auth != null &&
      //     get(/databases/$(database)/documents/userProfiles/$(request.auth.uid)).data.roles.includes("") == true;
      // }

      match /app/{settingID} {
        allow read, write: if hasRole(getRoles(), "moderator");
      }

      match /app/analytics {
        allow read: if signedIn();
        allow update: if hasRole(getRoles(), "moderator");
      }

      match /userProfiles/{userID} {
        allow read: if signedIn();
        allow write:
          if signedIn() &&
          // User can only edit their own document
          request.auth.uid == userID &&
          // Users cannot edit their roles
          request.resource.data.roles == resource.data.roles;
      }

      match /menu/draft {
        allow read, write: if signedIn();

        match /versions/{versionID} {
          allow read, create: if signedIn();
          allow write, delete: if hasRole(getRoles(), "moderator");
        }
      }

       match /menu/publishingQueue {
        allow read, write: if hasRole(getRoles(), "moderator");
      }

      match /images/{imageID} {
        allow read: if signedIn()
      }

    	match /articles/{articleID} {
        allow read:
          if signedIn();
        allow create:
          if signedIn() &&
          request.resource.data.publishedFullPath == null;
        allow update:
          if signedIn() &&
          request.resource.data.publishedFullPath == resource.data.publishedFullPath;
        allow delete:
          if hasRole(getRoles(), "moderator");

        match /versions/{versionID} {
        	allow read, create: if signedIn();
          allow write, delete: if hasRole(getRoles(), "moderator");
        }
      }

      match /languageCollections/{collectionID} {
        allow read, write: if signedIn();
      }

      match /publishingQueue/{articleID} {
        allow write, read: if hasRole(getRoles(), "moderator");
      }

      match /articleSync/{articleSyncID} {
        allow read, write: if signedIn();
      }

      match /results/{resultID} {
        allow get: if signedIn();
      }

      match /customers/{uid} {
        allow read: if request.auth.uid == uid;

        match /checkout_sessions/{id} {
          allow read, write: if request.auth.uid == uid;
        }
        match /subscriptions/{id} {
          allow read: if request.auth.uid == uid;
        }
        match /payments/{id} {
          allow read: if request.auth.uid == uid;
        }
      }

      match /products/{id} {
        allow read: if signedIn();

        match /prices/{id} {
          allow read: if signedIn();
        }

        match /tax_rates/{id} {
          allow read: if signedIn();
        }
      }
    }
  }
}
